// Generated F-Logic code from OO-DSL
// Module: main

// Class: Vehicle
// Class-level signatures (inheritable)
Vehicle[|brand => \string, model => \string, year => \integer, isElectric => \boolean, getAge() => \integer, isVintage() => \boolean|].

// Class: Car
Car::Vehicle.
// Class-level signatures (inheritable)
Car[|doors{2..5} => \integer, fuelType => \string, engineSize => \double|].

// Class: Motorcycle
Motorcycle::Vehicle.
// Class-level signatures (inheritable)
Motorcycle[|engineCC => \integer, hasSidecar => \boolean|].

// Class: Fleet
// Class-level signatures (inheritable)
Fleet[|name => \string, vehicles => Vehicle, owner => Person, getTotalVehicles() => \integer, getElectricVehicles() => Vehicle|].

// Object: Honda
Honda:Car.
Honda[brand -> "Honda"].
Honda[model -> "Civic"].
Honda[year -> 2020].
Honda[doors -> 4].
Honda[fuelType -> "Gasoline"].
Honda[engineSize -> 2].
Honda[isElectric -> \false].

// Object: Tesla
Tesla:Car.
Tesla[brand -> "Tesla"].
Tesla[model -> "Model 3"].
Tesla[year -> 2023].
Tesla[doors -> 4].
Tesla[fuelType -> "Electric"].
Tesla[engineSize -> 0].
Tesla[isElectric -> \true].

// Object: Harley
Harley:Motorcycle.
Harley[brand -> "Harley Davidson"].
Harley[model -> "Street 750"].
Harley[year -> 2019].
Harley[engineCC -> 750].
Harley[hasSidecar -> \false].
Harley[isElectric -> \false].

// Object: MyFleet
MyFleet:Fleet.
MyFleet[name -> "Personal Fleet"].
MyFleet[vehicles -> Honda].
MyFleet[vehicles -> Tesla].
MyFleet[vehicles -> Harley].
MyFleet[owner -> John].

// Method implementation: Vehicle.getAge
?Obj:Vehicle[getAge() -> ?Result] :- 2025 - ?Self[year].

// Method implementation: Vehicle.isVintage
?Obj:Vehicle[isVintage() -> ?Result] :- ?Self[getAge()] > 25.

// Method implementation: Fleet.getTotalVehicles
?Obj:Fleet[getTotalVehicles() -> ?Result] :- ?Self[vehicles][count()].

// Rule: ModernVehicle
@!{ModernVehicle} ?X:Vehicle[isModern] :- ?X:Vehicle[year -> ?V], ?V >= 2020.

// Rule: EcoFriendly
@!{EcoFriendly} ?X:Vehicle[isEcoFriendly] :- ?X:Vehicle[isElectric -> ?V], ?V = \true.

// Rule: SportsCar
@!{SportsCar} ?X:Car[isSportsCar] :- ?Obj:Car[doors -> ?Value] = 2 , ?Obj:Car[engineSize -> ?Value] > 3.

// Rule: PowerfulMotorcycle
@!{PowerfulMotorcycle} ?X:Motorcycle[isPowerful] :- ?X:Motorcycle[engineCC -> ?V], ?V > 600.
