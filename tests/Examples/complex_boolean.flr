// Generated F-Logic code from OO-DSL
// Module: main

// Class: Employee
// Class-level signatures (inheritable)
Employee[|name => \string, age => \integer, salary => \double, department => \string, yearsOfService => \integer, isActive => \boolean, hasGoodRating => \boolean, isManager => \boolean, isAdult() => \boolean, isSenior() => \boolean|].

// Class: Company
// Class-level signatures (inheritable)
Company[|name => \string, budget => \double, employeeCount => \integer|].

// Object: John
John:Employee.
John[name -> "John Doe"].
John[age -> 35].
John[salary -> 75000].
John[department -> "Engineering"].
John[yearsOfService -> 8].
John[isActive -> \true].
John[hasGoodRating -> \true].
John[isManager -> \false].

// Object: TechCorp
TechCorp:Company.
TechCorp[name -> "TechCorp"].
TechCorp[budget -> 5000000].
TechCorp[employeeCount -> 150].

// Rule: HighEarnerAndSenior
@!{HighEarnerAndSenior} ?X:Employee[isValuable] :- ?Obj:Employee[salary -> ?Value] > 70000 , ?Obj:Employee[age -> ?Value] > 30.

// Rule: YoungOrHighEarner
@!{YoungOrHighEarner} ?X:Employee[hasGoodProspects] :- ?Obj:Employee[age -> ?Value] < 25 ; ?Obj:Employee[salary -> ?Value] > 80000.

// Rule: EligibleForPromotion
@!{EligibleForPromotion} ?X:Employee[eligibleForPromotion] :- ?Obj:Employee[age -> ?Value] >= 25, ?Obj:Employee[yearsOfService -> ?Value] >= 3 , ?Obj:Employee[salary -> ?Value] < 100000.

// Rule: QualifiedEmployee
@!{QualifiedEmployee} ?X:Employee[isQualified] :- ?Obj:Employee[isActive -> ?Value] = \true , (?Obj:Employee[hasGoodRating -> ?Value] = \true; ?Obj:Employee[isManager -> ?Value] = \true).

// Rule: ExperiencedEngineer
@!{ExperiencedEngineer} ?X:Employee[isExperiencedEngineer] :- ?Obj:Employee[department -> ?Value] = "Engineering", ?Obj:Employee[yearsOfService -> ?Value] > 5 , ?Obj:Employee[salary -> ?Value] > 60000.

// Rule: SuccessfulCompany
@!{SuccessfulCompany} ?X:Company[isSuccessful] :- ?Obj:Company[budget -> ?Value] > 1000000 , ?Obj:Company[employeeCount -> ?Value] > 100.

// Rule: SpecialBonus
@!{SpecialBonus} ?X:Employee[getsSpecialBonus] :- ?Obj:Employee[age -> ?Value] >= 30, ?Obj:Employee[age -> ?Value] =< 50 , ?Obj:Employee[salary -> ?Value] >= 50000.

// Rule: FlexibleHiring
@!{FlexibleHiring} ?X:Employee[hasFlexibleSchedule] :- (?Obj:Employee[yearsOfService -> ?Value] > 10; ?Obj:Employee[salary -> ?Value] > 90000) ; ?Obj:Employee[department -> ?Value] = "Management".

// Method implementation: Employee.isAdult
?Obj:Employee[isAdult() -> ?Result] :- ?Self[age] >= 18.

// Method implementation: Employee.isSenior
?Obj:Employee[isSenior() -> ?Result] :- ?Self[yearsOfService] >= 5.
