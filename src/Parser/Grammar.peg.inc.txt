<?php

namespace OODSLToFLogic\Parser\Generated;

use hafriedlander\Peg\Parser\Packrat;
use OODSLToFLogic\AST\ProgramNode;
use OODSLToFLogic\AST\ClassNode;
use OODSLToFLogic\Utils\SourceLocation;

class OODSLParser extends Packrat {

    /*!* OODSLParser

    # Simplified Program handling
    Program: Statement*
        function Program__finalise(&$result) {
            $statements = [];

            // Handle the case where result might be a string or array
            if (is_array($result)) {
                // If result is already an array, extract statements
                foreach ($result as $key => $value) {
                    if (is_numeric($key) && $value !== null) {
                        $statements[] = $value;
                    }
                }
            }

            $location = new SourceLocation(1, 1, $this->currentFilename ?? null);
            return new ProgramNode($statements, $location);
        }

    Statement: ClassDefinition

    # Simple Class Definition
    ClassDefinition: "class" __ name:Identifier __ "{" __ "}"
        function ClassDefinition__finalise(&$result) {
            $location = new SourceLocation(1, 1);
            $className = is_array($result['name']) ? $result['name']['text'] : $result['name'];
            return new ClassNode($className, null, false, [], [], $location);
        }

    # Identifier with required spaces around regex
    Identifier: / [a-zA-Z_][a-zA-Z0-9_]* /

    # Whitespace with required spaces around regex
    __: / \s* /

    */

}